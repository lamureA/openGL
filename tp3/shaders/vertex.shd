#version 450

in vec3 position;
in vec3 normalFlat;
in vec3 normalSmooth;
in vec3 color;
in vec2 uv;

vec3 light_color = vec3(1.0, 1.0, 1.0);
vec3 light_position = vec3(1.0, 1.0, 5.0);

mat4 model_view_matrix = mat4(
			      0.57735, -0.33333, 0.57735, 0.00000,
			      0.00000, 0.66667, 0.57735, 0.00000,
			      -0.57735, -0.33333, 0.57735, 0.00000,
			      0.00000, 0.00000, -17, 1.00000);
mat4 projection_matrix = mat4(
			      5.00000, 0.00000, 0.00000, 0.00000,
			      0.00000, 5.00000, 0.00000, 0.00000,
			      0.00000, 0.00000, -1.00020, -1.00000,
			      0.00000, 0.00000, -10.00100, 0.00000);

out vec4 interpolated_color;
out vec2 interpolated_uv_position;


void main() {

    // light computation
    /*vec4 ligt_dir = vec4(light_position.xyz - position.xyz, 1);
	float coef = dot(normalize(normalSmooth.xyz), normalize(ligt_dir.xyz));
	coef = clamp(coef, 0, 1);
	interpolated_color = vec4(color*coef, 1.);
	interpolated_uv_position = uv;
    */

    interpolated_color = vec4(color, 1); // no light effects

    gl_Position = projection_matrix * model_view_matrix * vec4(position, 1.);
}
